name: .NET

on:
  push:
    branches: [ main, 0.1.5.x ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        configuration: [Release]  # , Debug]
        include:
          - configuration: Release
            is_release: true

    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8.0.x
    - name: Add Kapok package source
      run: dotnet nuget add source --username leo-schick --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name kapok-fwk "https://nuget.pkg.github.com/kapok-fwk/index.json"
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
        dotnet build --no-restore -c ${{ matrix.configuration}}
        dotnet pack -c ${{ matrix.configuration}} -o out
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
    - name: Upload artifacts
      uses: actions/upload-artifact@v4.0.0
      with:
        name: Nuget Packages
        path: ./out/*.nupkg
      if: ${{ matrix.is_release }}

  publish:
    needs: build

    if: github.event_name != 'pull_request'

    runs-on: windows-latest

    steps:
    - name: Add Kapok package source
      run: dotnet nuget add source --username leo-schick --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name kapok-fwk "https://nuget.pkg.github.com/kapok-fwk/index.json"

    - uses: actions/download-artifact@v4.1.0
      with:
        name: Nuget Packages
        path: ~/download/nuget_packages/

    - name: Push generated package to GitHub registry
      run: Get-ChildItem "~/download/nuget_packages/" | foreach { dotnet nuget push $_.FullName --skip-duplicate --source kapok-fwk --api-key ${{ secrets.KAPOK_FWK_GITHUB_TOKEN }} }
